name: Build & Package GUI + Python CLI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-python:
    name: Build lipidimea CLI
    runs-on: ubuntu-latest
    outputs:
      cli-binary-path: ${{ steps.freeze.outputs.binary }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install lipidimea
        run: |
          pip install pyinstaller
          pip install .

      - name: Freeze CLI with PyInstaller
        id: freeze
        run: |
          pyinstaller --noconfirm --onefile --name lipidimea lipidimea/__main__.py
          echo "::set-output name=binary::dist/lipidimea"

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: lipidimea-cli
          path: dist/lipidimea

  build-gui:
    name: Package Electron GUI
    needs: build-python
    runs-on: macos-13
    defaults:
      run:
        working-directory: gui

    steps:
      - uses: actions/checkout@v3

      - name: Download frozen CLI
        uses: actions/download-artifact@v4
        with:
          name: lipidimea-cli
          path: gui/bin

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install GUI dependencies
        run: npm install

      - name: ls
        run: |
          ls
          ls *
          ls ..
          ls ../..

      - name: Build + package for macOS (x64 & arm64)
        run: npm run make-x64   # your existing script that calls electron-builder

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: macos-gui
          path: out/make/**/LipidIMEA-*-mac.dmg





  # build-windows:
  #   name: Build Windows (x64)
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'

  #     - name: Install dependencies
  #       working-directory: gui
  #       run: npm install

  #     - name: Build Windows (x64)
  #       working-directory: gui
  #       run: npm run make-win32-x64

  #     - name: Upload Windows Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows-distributable
  #         path: 'D:\a\lipid_gui_private\lipid_gui_private\gui\out\make\squirrel.windows\x64\dia_dda_application-0.12.26 Setup.exe'

